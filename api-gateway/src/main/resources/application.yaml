spring:
  application:
    name: ${SPRING_APPLICATION_NAME}
  cloud:
    gateway:
      routes:
        - id: AUTH-SERVICE
          uri: lb://AUTH-SERVICE
          predicates:
            - Path=/api/auth/**
          filters:
            - RewritePath=/api/auth/(?<segment>.*), /auth/${segment}

        - id: REVIEW-SERVICE
          uri: lb://REVIEW-SERVICE
          predicates:
            - Path=/api/review/**
          filters:
            - RewritePath=/api/review/(?<segment>.*), /review/${segment}

        - id: MENU-SERVICE
          uri: lb://MENU-SERVICE
          predicates:
            - Path=/api/menu/**
          filters:
            - RewritePath=/api/menu/(?<segment>.*), /menu/${segment}

        - id: ORDER-SERVICE
          uri: lb://ORDER-SERVICE
          predicates:
            - Path=/api/order/**
          filters:
            - RewritePath=/api/order/(?<segment>.*), /order/${segment}

        - id: STAFF-SERVICE
          uri: lb://STAFF-SERVICE
          predicates:
            - Path=/api/staff/**
          filters:
            - RewritePath=/api/staff/(?<segment>.*), /staff/${segment}

        - id: BOOKING-SERVICE
          uri: lb://BOOKING-SERVICE
          predicates:
            - Path=/api/booking/**, /api/room-type/**, /api/room/**
          filters:
            - RewritePath=/api/booking/(?<segment>.*), /booking/${segment}
            - RewritePath=/api/room-type/(?<segment>.*), /room-type/${segment}
            - RewritePath=/api/room/(?<segment>.*), /room/${segment}
  config:
    import: "optional:${SPRING_CONFIG_IMPORT}"

---

spring:
  config:
    activate:
      on-profile: dev
    import: "optional:configserver:http://localhost:8067/"
  application:
    name: api-gateway

jwt:
  secret-key: ThisIsSecretForJWTHS512SignatureAlgorithmThatMUSTHave64ByteLength
  token-expiration-seconds: 1800

server:
  port: 8060

eureka:
  client:
    serviceUrl:
      defaultZone: "http://localhost:8761/eureka/"
    initialInstanceInfoReplicationIntervalSeconds: 5
    registryFetchIntervalSeconds: 5
  instance:
    preferIpAddress: true
    leaseRenewalIntervalInSeconds: 5
    leaseExpirationDurationInSeconds: 5


---